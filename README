AmazonSES Sendmail

Non blocking email library for use with AmazonSES service.



Requirements:
- gevent
- cjson (optional but recommended)
- bottle (included)
- amazon_ses (included)



Usage:

- Insert your AmazonSES access key in src/config.py
- Start the server:  python start.py
- Access the /add url in your browser: http://localhost:3000/add/?from=your@email.com&to=another@email.com&subject=subject&text=message+text



Details:

- Both POST and GET methods are allowed for put messages in queue.
- You can view the status accessing the url /status.
- All logs are written on src/logs/worker.log.
- You can send HTML emails just passing the "html" field to /add url.
- You can define specific headers, but some are blocked by AmazonSES.



Client example:

import urllib, urllib2, json

URL = 'http://localhost:3000/add'

# message data
data = {
    'from': 'some@email.com',
    'to:' 'another@email.com',
    'subject': 'Hello dude',
    'text': 'AmazonSES test.',
    'html': '<b>AmazonSES</b> test.',
}

# if you need specific headers:
headers = {'return-path': 'thatsme@email.com',}
data['headers'] = json.dumps(headers)

# encode the POST data
encoded_data = urllib.urlencode(data)

# make the request
request = urllib2.Request(URL, encoded_data)
response = urllib2.urlopen(request).read()

# unserialize the json response
response_data = json.loads(response)

# print response
print response_data['status']
print response_data['message']



Knowed issues:

AmazonSES has some sending limits: the sending quota and maximum send rate (see http://aws.amazon.com/ses/#details). At this moment this library doesn't care about it, presumes that you have large limits and a good reputation :)



Todo:

- Treat AmazonException's generated by sending limits. Maybe re-add messages in queue and lower the sending rate.
